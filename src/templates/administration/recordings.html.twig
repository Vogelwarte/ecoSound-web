{% extends 'administration/admin.html.twig' %}

{% block admin_content %}

    {% include 'administration/upload.html.twig' with {'site': site, 'colId': colId} %}
    <div class="card mb-3" id="recordingsList">
        <div class="card-header border-light bg-white text-right">
            <div class="col-auto mr-auto mt-2">
                <form id="projectForm" class="form-inline" action="{{ baseUrl }}/admin/recordings">
                    <label for="projectId">Project</label>
                    <select id="projectId" name="projectId" class="form-control form-control-sm ml-3">
                        {% for project in projects %}
                            <option value="{{ project.id }}" {{ project.id == projectId ? 'selected' }} {{ project.collection is null ?"disabled" }}>
                                {{ project.name }}{{ project.collection_id }}{{ project.collection is null ?" (No Data)" }}
                            </option>
                        {% endfor %}
                    </select>
                    <label for="collId" class="ml-3">Collection</label>
                    <select id="colId" name="colId" class="form-control form-control-sm ml-3">
                        {% for collection in collections %}
                            <option value="{{ collection.id }}" {{ collection.id == colId ? 'selected' }}>
                                {{ collection.name }}
                            </option>
                        {% endfor %}
                    </select>
                </form>
            </div>
            <form id="metaDataForm" method="POST" class="collapse">
                <input type="file" name="metaDataFile" id="metaDataFile" accept="text/csv" style="display: none">
                <input type="hidden" name="colId" value="{{ colId }}">
            </form>
            <button id="viewing" name="table-btn" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#viewing" disabled>
                <i class="fas fa-eye"></i>
                Viewing
            </button>
            <button id="download" name="table-btn" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#download" disabled>
                <i class="fas fa-download"></i>
                Download
            </button>
            <button id="models" name="table-btn" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#models" disabled>
                <i class="fa-solid fa-gears"></i>
                Models
            </button>
            <button id="deletion" name="table-btn" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#deletion" disabled>
                <i class="fas fa-trash"></i>
                Deletion
            </button>
            <button class="btn btn-outline-primary btn-sm mt-2 dropdown-toggle" id="metaData" type="button" data-toggle="dropdown" aria-expanded="false">
                <i class="fa-solid fa-file-csv"></i>
                Meta-data
            </button>
            <div class="dropdown-menu">
                <a class="dropdown-item" type="button" id="metaDataButton"><i class="fa-solid fa-file-arrow-up"></i> Upload Meta-data</a>
                <a class="dropdown-item" type="button" id="viewInstructions"><i class="fa-solid fa-circle-info"></i> View Instructions</a>
            </div>
            <button type="button" id="uploadButton" data-toggle="collapse" data-target="#uploadForm" class="btn btn-outline-primary btn-sm mt-2">
                <span class="fas fa-upload"></span>
                Upload Files
            </button>
            <button id="recordingsExport" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#recordingsExport" aria-expanded="false" aria-controls="recordingsExport">
                <i class="fa fa-download"></i>
                Recording Export
            </button>
        </div>
        <table id="recTable" style="display:none;white-space: nowrap;">
            <thead class="table-borderless">
            <tr style="font-size: .875rem;">
                <th>
                    <input type="checkbox" class="js-all-checkbox" name="check-all" id="check-all">
                </th>
                <th>#</th>
                <th>Original Filename</th>
                <th>Name</th>
                <th>User</th>
                <th>Site</th>
                <th>Recorder</th>
                <th>Microphone</th>
                <th>License</th>
                <th>Recording Type</th>
                <th>Medium</th>
                <th>Note</th>
                <th>Date</th>
                <th>Time</th>
            </tr>
            </thead>
            <tbody class="form-control-sm js-recording-list"></tbody>
        </table>
    </div>
    <div class="modal fade" id="modal-div" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger">Warning</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body ml-3">
                    <div>
                        <div class="form-group">
                            <input id="delete_id" type="hidden">
                            <label>Deleting this recording will also delete the <b class="text-danger" id="count"></b> tags inside and cannot be reversed!</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="js-close-button" type="button" class="btn btn-outline-secondary" data-dismiss="modal" aria-label="Close">
                        <i class="fas fa-times"></i>
                        Close
                    </button>
                    <button id="js-delete-button" type="button" class="btn btn-outline-danger">
                        <i class="fas fa-trash-alt"></i>
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modal-info" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">View Instructions</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body ml-3">
                    <div>
                        <div class="form-group">
                            <label>Recording meta-data can be uploaded with a CSV containing the following columns:<br><br>
                                recording_start (format: YYYY-MM-DD HH:MM:SS, local time)<br>
                                duration_s (duration of recording in seconds)<br>
                                sampling_rate (numeric value in Hz)<br>
                                name (optional, limited to 40 characters)<br>
                                bit_rate (optional, integer)<br>
                                channel_number (optional, integer)<br><br>
                                You can download a <a class="text-info" id="metaDemo">template CSV file</a> to fill in your data.</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="js-close-button" type="button" class="btn btn-outline-secondary" data-dismiss="modal" aria-label="Close">
                        <i class="fas fa-times"></i>
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modal-tf" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title maad-title">Classifiers</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body ml-3">
                    <div>
                        <div class="form-group">
                            <select id="tf" name="tf_id" autocomplete="off" class="form-control form-control-sm col-6 mb-3" required>
                                {% for model in models %}
                                    <option value="{{ model.tf_model_id }}">{{ model.name }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="js-close-button" type="button" class="btn btn-outline-secondary" data-dismiss="modal" aria-label="Close">
                        <i class="fas fa-times"></i>
                        Close
                    </button>
                    <a id='model-btn' class="js-tf-modal btn btn-outline-primary">
                        <i class="fa-solid fa-check"></i>
                        Submit
                    </a>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

    {% block header %}
        {{ parent() }}
        <!-- PUpload -->
        <link rel="stylesheet" href="{{ baseUrl }}/assets/plupload/jquery.plupload.queue.css" media="screen">
        <link rel="stylesheet" href="{{ baseUrl }}/assets/css/bootstrap-select.css">

        <script src="{{ baseUrl }}/assets/plupload/js/plupload.full.min.js" defer></script>
        <script src="{{ baseUrl }}/assets/plupload/js/jquery.plupload.queue.min.js" defer></script>
        <script src="{{ baseUrl }}/templates/administration/js/upload.js" defer></script>

    {% endblock %}

    {% block scripts %}
        {{ parent() }}
        <script>
            var arr ={{ users|json_encode|raw }};
            var microphones ={{ microphones|json_encode|raw }};
            $(document).ready(function () {
                $('#recTable').show()
                $('#recTable').DataTable({
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        "url": '{{ baseUrl }}/admin/recordingManager/getListByPage/{{ projectId }}/{{ colId }}',
                        "type": 'POST'
                    },
                    "stateSave": true,
                    "StateDuration": -1,
                    "order": [[1, 'asc']],
                    "columnDefs": [
                        {
                            "orderable": false,
                            "targets": [0],
                        },
                        {
                            "className": "dt-center",
                            "targets": [0],
                        }
                    ],
                    "bAutoWidth": false,
                    "scrollX": true,
                });
                $('#tf').change(function () {
                    let html = ''
                    $(this).siblings().remove();
                    {% for model in models %}
                    if ($(this).val() == '{{ model.tf_model_id }}') {
                        html = html + '<div class="col-form-label">' +
                            '<strong>Description:</strong>' +
                            '<a class="col-form-label" href="{{ model.source_URL }}" target="_blank" title="Documentation"> <i class="fa fa-book"></i></a>' +
                            '<div class="col-form-label-sm">{{ model.description }}</div></div>'
                        let data = '{{ model.parameter }}'.split('$').map(item => item.split('@'));
                        $.each(data, function (index, value) {
                            html = html + '<div class="form-inline">' +
                                '<label class="ml-1 col-form-label-sm" for="' + value[0] + '">' + value[0] + '</label></div>' +
                                '<div class="form-group form-inline">' +
                                '<input id="' + value[0] + '" name="' + value[0] + '" class="form-control form-control-sm" type="text">' +
                                '<label class="ml-2 col-form-label-sm">' + value[1] + '</label></div>'
                        })
                        $(this).after(html)
                    }
                    {% endfor %}
                })
                $("#tf").change();
            });
            document.addEventListener("DOMContentLoaded", function (event) {
                $("#uploadButton").click(function (e) {
                    $("#uploadButton").toggle();
                    $("#metaData").toggle();
                    document.getElementById('uploadForm').hidden = false;
                });

                $('#viewInstructions').click(function () {
                    $("#modal-info").modal('show');
                })

                $('#js-delete-button').click(function () {
                    postRequest('{{ baseUrl }}/api/admin/recordingManager/delete', {'id': $('#delete_id').val()}, false, false, function () {
                        location.reload();
                    });
                });

                /* Save recordings list */
                $(".js-recording-list").on('change', 'input, select, textarea', function () {
                    if ($(this)[0].className == 'js-checkbox') {
                        return
                    }
                    saveFormList($(this), 'api/admin/recordingManager/save');
                });

                $("#modal-div").keydown(function (e) {
                    if (e.keyCode == 13) {
                        $("#modal-div").modal('hide');
                        event.preventDefault();
                    }
                });
                $("select[name='user_id']").on('mouseenter ', function () {
                    if ($(this)[0].options.length < 2) {
                        for (var key in arr) {
                            if ($(this).val() != arr[key]['user_id']) {
                                $(this).append("<option value='" + arr[key]['user_id'] + "'>" + arr[key]['name'] + "</option>");
                            }
                        }
                    }
                });

                $("#recorder").on('change', function () {
                    $('#microphone').empty()
                    $('#microphone').removeAttr('disabled')
                    var microphone = $(this).find('option:selected').attr('data-microphone').split(',')
                    $('#microphone').append("<option></option>")
                    for (var key in microphones) {
                        if ($.inArray(microphones[key]['microphone_id'] += '', microphone) >= 0) {
                            $('#microphone').append("<option value='" + microphones[key]['microphone_id'] + "'>" + microphones[key]['name'] + "</option>");
                        }
                    }
                });
                $("select[name='recorder_id']").on('change', function () {
                    var id = $(this).attr('id').split('_')[1]
                    $("#microphone_" + id).empty()
                    $("#microphone_" + id).append("<option value='0'></option>");
                    var microphone = $(this).find('option:selected').attr('data-microphone').split(',')
                    for (var key in microphones) {
                        if ($.inArray(microphones[key]['microphone_id'] += '', microphone) >= 0) {
                            $('#microphone_' + id).append("<option value='" + microphones[key]['microphone_id'] + "'>" + microphones[key]['name'] + "</option>");
                        }
                    }
                });
                $("select[name='microphone_id']").on('mouseenter ', function () {
                    if ($(this)[0].options.length < 2) {
                        var id = $(this).attr('id').split('_')[1]
                        if ($('#recorder_' + id).val() != 0) {
                            if ($(this).val() > 0) {
                                $("#microphone_" + id).prepend("<option value='0'></option>")
                            }
                            var microphone = $('#recorder_' + id).find('option:selected').attr('data-microphone').split(',')
                            for (var key in microphones) {
                                if ($.inArray(microphones[key]['microphone_id'] += '', microphone) >= 0) {
                                    if ($(this).val() != microphones[key]['microphone_id']) {
                                        $('#microphone_' + id).append("<option value='" + microphones[key]['microphone_id'] + "'>" + microphones[key]['name'] + "</option>");
                                    }
                                }
                            }
                        }
                    }
                });
                $('#projectId').change(function () {
                    $('#colId').val("")
                    $("#projectForm").submit();
                });
                $('#colId').change(function () {
                    $("#projectForm").submit();
                });
                $('#metaDemo').on('click', function () {
                    window.location.href = '{{ baseUrl }}/api/admin/recordingManager/download';
                });
                $('#models').on('click', function () {
                    $('#modal-tf').modal('show');
                })

                $(document).on('click', '#recordingsExport', function () {
                    window.location.href = '{{ baseUrl }}/api/admin/recordingManager/export/' + $('#colId').val();
                });

                $(".js-tf-modal").click(function (e) {
                    let data = []
                    let arr = []
                    let lat, lon
                    $('.js-checkbox:checked').each(function () {
                        let id = $(this).closest('tr').find('[name="itemID"]').val()
                        if ($('#tf').val() == 1) {
                            if ($('#site_id' + id).find('option:selected').attr('data-lon') == undefined || $('#site_id' + id).find('option:selected').attr('data-lat') == undefined || $('#file_date' + id).val() == "") {
                                lat = ''
                                lon = ''
                            } else {
                                lat = $('#site_id' + id).find('option:selected').attr('data-lat')
                                lon = $('#site_id' + id).find('option:selected').attr('data-lon')
                            }
                            arr = {
                                'collection_id': $('#colId').val(),
                                'recording_id': id,
                                'filename': $('#name_' + id).val(),
                                'creator_type': $("#tf option:selected").text(),
                                'recording_directory': $('#directory' + id).val(),
                                'lat': lat,
                                'lon': lon,
                                'file_date': $('#file_date' + id).val(),
                                'sensitivity': $("#sensitivity").val(),
                                'min_conf': $("#min_conf").val(),
                                'overlap': $("#overlap").val(),
                                'sf_thresh': $("#sf_thresh").val(),
                                'temp': $("#path" + id).val(),
                                'max_freq': $("#max_freq" + id).val(),
                                'user_id': '{{ user_id }}',
                            };
                        } else if ($('#tf').val() == 2) {
                            arr = {
                                'collection_id': $('#colId').val(),
                                'recording_id': id,
                                'filename': $('#name_' + id).val(),
                                'creator_type': $("#tf option:selected").text(),
                                'recording_directory': $('#directory' + id).val(),
                                'file_date': $('#file_date' + id).val(),
                                'detection_threshold': $("#detection_threshold").val(),
                                'temp': $("#path" + id).val(),
                                'user_id': '{{ user_id }}',
                            };
                        }
                        arr = JSON.stringify(arr)
                        data.push(arr)
                    });
                    postRequest('{{ baseUrl }}/api/admin/recordingManager/model', data, false, false, function () {
                        $('#modal-tf').modal('hide')
                    });
                    e.preventDefault();
                });
                $('button[name="table-btn"][data-target="#viewing"]').click(function (e) {
                    let count = 0
                    $('.js-checkbox:checked').each(function () {
                        if ($(this).data('type') == 'audio data') {
                            count = count + 1
                            window.open('/recording/show/' + $(this).data('id'), '_blank');
                        }
                    });
                    if (count == 0) {
                        showAlert('Select at least one audio data.');
                    }
                    e.preventDefault();
                })
                $('button[name="table-btn"][data-target="#download"]').click(function (e) {
                    let count = 0
                    $('.js-checkbox:checked').each(function () {
                        if ($(this).data('type') == 'audio data') {
                            count = count + 1
                            $('#download' + $(this).data('id'))[0].click()
                        }
                    });
                    if (count == 0) {
                        showAlert('Select at least one audio data.');
                    }
                    e.preventDefault();
                })
                $('button[name="table-btn"][data-target="#deletion"]').click(function (e) {
                    let id = [];
                    $('.js-checkbox:checked').each(function () {
                        id.push($(this).data('id'));
                    });
                    id = id.join(',')
                    $.ajax({
                        type: 'POST', url: '{{ baseUrl }}/api/admin/recordingManager/count',
                        data: {'id': id},
                    }).done(function (data) {
                        $('#count').text(data)
                        $('#delete_id').val(id)
                        $("#modal-div").modal('show');
                    })
                })
            });
        </script>
    {% endblock %}
