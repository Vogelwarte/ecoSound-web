{% extends 'administration/admin.html.twig' %}

{% block admin_content %}

    {% include 'administration/userForm.html.twig' %}
    <div class="card mb-3" id="usersList">
        <div class="card-header border-light bg-white text-right">
            <button id="userFormButton" class="btn btn-outline-primary btn-sm mt-2" type="button" data-toggle="collapse" data-target="#userFormSection" aria-expanded="false" aria-controls="userFormSection">
                <i class="fas fa-plus"></i>
                Add User
            </button>
        </div>
        <table id="userTable" style="display:none;white-space: nowrap;">
            <thead class="table-borderless">
            <tr style="font-size: .875rem;">
                <th>#</th>
                <th>Name</th>
                <th>Username</th>
                <th>Email</th>
                {% if is_admin %}
                    <th>Role</th>
                    <th>Active</th>
                {% endif %}
                <th></th>
                <th></th>
                <th></th>
            </tr>
            </thead>
            <tbody class="form-control-sm js-user-list">
            {% for user in users %}
                <tr>
                    <td>
                        {{ user.user_id }}
                        <input type="hidden" class="form-control form-control-sm" name="itemID" value="{{ user.user_id }}">
                    </td>
                    <td data-search="{{ user.name }}" data-order="{{ user.name }}">
                        <input type="text" class="form-control form-control-sm" name="name" value="{{ user.name }}">
                    </td>
                    <td>{{ user.username }}</td>
                    <td data-search="{{ user.email }}" data-order="{{ user.email }}">
                        <input type="email" class="form-control form-control-sm" name="email" value="{{ user.email }}">
                    </td>
                    {% if is_admin %}
                        <td {% for role in roles %}{% if role.role_id == user.role_id %}data-search="{{ role.name }}" data-order="{{ role.name }}"{% endif %}{% endfor %}>
                            <select name="role_id" class="form-control form-control-sm">
                                {% for role in roles %}
                                    <option value="{{ role.role_id }}" {{ role.role_id == user.role_id ? "selected" }}>{{ role.name }}</option>
                                {% endfor %}
                            </select>
                        </td>
                        <td class="text-center" data-search="{{ user.active }}" data-order="{{ user.active }}">
                            <input name="active" type="checkbox" {{ user.active ? 'checked' }}>
                        </td>
                    {% endif %}
                    <td>
                        <a href="{{ baseUrl }}/admin/userMgr/editPassword" class="js-open-modal" data-id="{{ user.user_id }}" title="Edit Password">
                            <i class='fas fa-edit'></i>
                        </a>
                    </td>
                    <td>
                        <a href="{{ baseUrl }}/UserPermission/{{ user.user_id == user_id and not is_admin?'view':'show' }}/{{ user.user_id }}" class="js-open-modal" title="Collection Privileges" $privhidden>
                            <i class='fas fa-tasks'></i>
                        </a>
                    </td>
                    <td>
                        <input type="color" name="color" alt="Tag color" value="{{ user.color is empty ? default_color : user.color }}">
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
{% endblock %}

{% block scripts %}
    {{ parent() }}
    <script>
        $(document).ready(function () {
            $('#userTable').show()
            $('#userTable').DataTable({
                "pageLength": 8,
                "lengthChange": false,
                "stateSave": true,
                "StateDuration": -1,
                "order": [[0, 'asc']],
                "columnDefs": [{
                    "orderable": false,
                    "targets": [6, 7, 8]
                }],
                "bAutoWidth": false,
                "scrollX": true,
            });
        });
        $(function () {
            'use strict';

            /* Save users list */
            $('.js-user-list').on('change', 'input, select, textarea', function () {
                saveFormList($(this), 'api/admin/userMgr/save');
                var table = $('#userTable').DataTable()
                var tr = $(this).closest("tr")
                table.rows(tr).invalidate()
            });

            $("#userFormSection").on('shown.bs.collapse', function () {
                $("#usersList").hide();
            }).on('hidden.bs.collapse', function () {
                $("#usersList").show();
            });

            $(document).on('click', '#saveButton', function () {
                $('#passwordForm').submit();
            });

            document.querySelectorAll('[type=password]').forEach(function (elem) {
                elem.addEventListener('keyup', function () {
                    document.getElementById('user_new_pwd2').setCustomValidity('');
                    if ($('#user_new_pwd2').val() !== $('#user_new_pwd1').val()) {
                        document.getElementById('user_new_pwd2').setCustomValidity('Passwords do not match.');
                    }
                });
            });

            $(document).on('submit', '#passwordForm', function (e) {
                e.preventDefault();

                if (this.checkValidity() === false) {
                    e.stopPropagation();
                } else {
                    $.ajax({type: 'POST', url: '{{ baseUrl }}/api/admin/userMgr/save', data: new FormData($(this)[0])}).done(function (response) {
                        showAlert(response.message);
                        $('#modal-div').modal('hide');
                    }).fail(function (response) {
                        if (response.responseJSON.errorCode === 1) {
                            $(this).removeClass('was-validated');
                            $('#admin_pwd').addClass('is-invalid');
                        }
                    });
                }

                this.classList.add('was-validated');
            });

            $('#userForm').submit(function (e) {
                e.preventDefault();

                if (this.checkValidity() === false) {
                    e.stopPropagation();
                } else {
                    postRequest('{{ baseUrl }}/api/admin/userMgr/save', new FormData($(this)[0]), false, false, function () {
                        location.reload();
                    });
                }
                this.classList.add('was-validated');
            });
        });
    </script>
{% endblock %}
