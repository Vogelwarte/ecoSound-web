{% extends 'administration/admin.html.twig' %}

{% block admin_content %}
    <link rel="stylesheet" href="{{ baseUrl }}/assets/css/bootstrap-select.css">
    <div class="card mb-3" id="tagsList">
        <div class="card-header border-light bg-white text-right">
            <div class="col-auto mr-auto mt-2">
                <form id="collectionForm" class="form-inline" action="{{ baseUrl }}/admin/tags">
                    <label for="projectId">Project</label>
                    <select id="projectId" name="projectId" class="form-control form-control-sm ml-3">
                        {% for project in projects %}
                            <option value="{{ project.id }}" {{ project.id == projectId ? 'selected' }} {{ project.collection is null ?"disabled" }}>
                                {{ project.name }}{{ project.collection_id }}{{ project.collection is null ?" (No Data)" }}
                            </option>
                        {% endfor %}
                    </select>
                    <label for="collId" class="ml-3">Collection</label>
                    <select id="colId" name="colId" class="form-control form-control-sm ml-3">
                        {% for collection in collections %}
                            <option value="{{ collection.id }}" {{ collection.id == colId ? 'selected' }}>
                                {{ collection.name }}
                            </option>
                        {% endfor %}
                    </select>
                </form>
            </div>
            <button id="viewing" name="table-btn" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#viewing" disabled>
                <i class="fas fa-eye"></i>
                Viewing
            </button>
            <button id="deletion" name="table-btn" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#deletion" disabled>
                <i class="fas fa-trash"></i>
                Deletion
            </button>
            <button id="tagsExport" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#tagsExport" aria-expanded="false" aria-controls="tagsExport">
                <i class="fa fa-download"></i>
                Tag Export
            </button>
            <button id="reviewsExport" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#reviewsExport" aria-expanded="false" aria-controls="reviewsExport">
                <i class="fa fa-download"></i>
                Review Export
            </button>
        </div>
        <table id="tagsTable" style="display:none;white-space: nowrap;">
            <thead class="table-borderless">
            <tr style="font-size: .875rem;">
                <th></th>
                <th>
                    <input type="checkbox" class="js-all-checkbox" name="check-all" id="check-all">
                </th>
                <th>#</th>
                <th>Phony</th>
                <th>Sound Type</th>
                <th>Recording</th>
                <th>User</th>
                <th>Creator Type</th>
                <th>Confidence</th>
                <th>Time Start</th>
                <th>Time End</th>
                <th>Min Freq</th>
                <th>Max Freq</th>
                <th>Species</th>
                <th>Uncertain</th>
                <th>Call Distance</th>
                <th>Distance Not Estimable</th>
                <th>Individuals</th>
                <th>Animal Sound Type</th>
                <th>Reference Call</th>
                <th>Comments</th>
                <th style="width: 120px">Creation Date (UTC)</th>
            </tr>
            </thead>
            <tbody class="form-control-sm js-tag-list"></tbody>
        </table>
    </div>
{% endblock %}
{% block header %}
    {{ parent() }}
    <script src="{{ baseUrl }}/assets/js/bootstrap-select.js" defer></script>
    <script>
        $(document).ready(function () {
            $('#tagsTable').show()
            let table = $('#tagsTable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": '{{ baseUrl }}/admin/tagMgr/getListByPage/{{ colId }}',
                    "type": 'POST'
                },
                "stateSave": true,
                "StateDuration": -1,
                "order": [[2, 'asc']],
                "columnDefs": [
                    {
                        "orderable": false,
                        "targets": [0, 1]
                    },
                    {
                        "className": "dt-center",
                        "targets": [0, 1, 14, 16, 19],
                    },
                ],
                "bAutoWidth": false,
                "scrollX": true,
            });

            table.on('click', '.review', function (e) {
                let tr = $(this).closest('tr');
                let row = table.row(tr);
                let html = ''

                if (row.child.isShown()) {
                    row.child.hide();
                    tr.removeClass('shown');
                    $(this).removeClass('fa-caret-down').addClass('fa-caret-right');
                } else {
                    table.rows('.shown').every(function () {
                        this.child.hide();
                        $(this.node()).removeClass('shown');
                        $(this.node()).find('.review').removeClass('fa-caret-down').addClass('fa-caret-right');
                    });

                    $(this).removeClass('fa-caret-right').addClass('fa-caret-down');
                    let data = $(this).data('str').split('$').map(item => item.split('@'));
                    html = "<table style='margin-left: 80px;'><thead><tr><th>Reviewer</th><th>Status</th><th>Species</th><th>Note</th><th>Date</th><th></th></tr></thead><tbody class='form-control-sm'>"
                    $.each(data, function (index, value) {
                        if (1 == '{{ isManage }}' || {{ user_id }} == value[8]) {
                            html = html + '<tr class="reviewRow" style="font-size: .875rem;">' +
                                '<td><input name="tag_id" type="hidden" value="' + value[0] + '"><input name="user_id" type="hidden" value="' + value[8] + '">' + value[1] + '</td>' +
                                "<td><select id='tag_review_status_id' name='tag_review_status_id' data-id='" + value[0] + '-' + value[8] + "' class='form-control form-control-sm' style='width:150px'>" +
                                "<option value='1'" + (value[2] === '1' ? ' selected' : '') + ">Accepted</option>" +
                                "<option value='2'" + (value[2] === '2' ? ' selected' : '') + ">Corrected</option>" +
                                "<option value='3'" + (value[2] === '3' ? ' selected' : '') + ">Deleted</option>" +
                                "<option value='4'" + (value[2] === '4' ? ' selected' : '') + ">Uncertain</option></select></td>" +
                                "<td style='width:250px;'>" + "<input class='js-species-id' id='species" + value[0] + '-' + value[8] + "' data-type='edit' name='species_id' type='hidden' value='" + value[4] + "'><input id='speciesName" + value[0] + '-' + value[8] + "' style='width:250px;" + (value[2] != '2' ? 'display:none' : '') + "' data-type='edit' class='form-control form-control-sm js-species-autocomplete' type='text' size='30' value='" + value[5] + "'><div class='invalid-feedback'>Please select a species from the list.</div></td>" +
                                "<td style='width:250px;'><input type='text' class='form-control form-control-sm' name='note' value='" + value[6] + "' style='width:250px;'>" + '</td>' +
                                '<td>' + value[7] + '</td>' +
                                "<td><a class='js-delete-btn' href='#' data-id='" + value[0] + '-' + value[8] + "' title='Delete Review'><span class='fas fa-trash'></span></a></td></tr>"
                        } else {
                            html = html + '<tr style="font-size: .875rem;">' +
                                '<td>' + value[1] + '</td>' +
                                '<td>' + value[3] + '</td>' +
                                '<td>' + value[5] + '</td>' +
                                '<td>' + value[6] + '</td>' +
                                '<td>' + value[7] + '</td>' +
                                '<td></td></tr>'
                        }
                    })
                    html = html + "</tbody></table>"
                    row.child(html).show();
                    tr.addClass('shown');
                }
            });

            $('#tagsTable tbody').on('click', '.js-delete-btn', function () {
                if (!confirm('Are you sure you want to delete this review?')) {
                    return false;
                }
                deleteRequest('{{ baseUrl }}/api/tagReview/delete/' + $(this).data('id'), [], false, false, table.ajax.reload());
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            var arr ={{ animal_sound_types|json_encode|raw }};
            var soundTypes ={{ soundTypes|json_encode|raw }};
            'use strict';
            $(document).on('click', '#tagsExport', function () {
                window.location.href = '{{ baseUrl }}/api/admin/tagMgr/export/{{ colId }}';
            });

            $(document).on('click', '#reviewsExport', function () {
                window.location.href = '{{ baseUrl }}/api/tagReview/export/{{ colId }}';
            });

            $('.js-delete-button').click(function (e) {
                if (!confirm('Are you sure you want to delete this tag?')) {
                    return false;
                }
                let row = $(this).parents("tr");
                deleteRequest('{{ baseUrl }}/api/tag/delete/' + $(this).data('id'), [], false, false, row.remove());
            });

            $(".js-tag-list").on('change', 'input, select, textarea', function () {
                if ($(this)[0].className == 'js-checkbox') {
                    return
                }
                if ($(this)[0].name == 'tag_review_status_id') {
                    let id = $(this).data('id')
                    if ($(this).val() == '1') {
                        $('#speciesName' + id).css('display', 'none');
                        $('#species' + id).val($('#old_id' + id.split('-')[0]).val())
                    } else if ($(this).val() == '2') {
                        $('#speciesName' + id).css('display', '');
                        $('#speciesName' + id).val('')
                        $('#species' + id).val('')
                        return
                    } else {
                        $('#speciesName' + id).css('display', 'none');
                        $('#species' + id).val('')
                    }
                }
                if ($(this).closest('tr').hasClass('reviewRow')) {
                    saveFormList($(this), 'api/tagReview/save');
                } else {
                    saveFormList($(this), 'api/admin/tagMgr/save');
                }
            });
            $('#projectId').change(function () {
                $('#colId').val("")
                $("#collectionForm").submit();
            });
            $('#colId').change(function () {
                $("#collectionForm").submit();
            });
            $('#tagsTable tbody').on('click', 'input[name=distance_not_estimable]', function () {
                var id = $(this).attr('id').split('_')[3]
                let callDistance = $('#sound_distance_m' + id);
                if ($(this).is(':checked')) {
                    callDistance.val(null);
                    callDistance.prop('readonly', true);
                    return;
                }
                callDistance.prop('readonly', false);
            });
            $('#tagsTable tbody').on('mouseenter', 'select[name=animal_sound_type]', function () {
                if ($(this)[0].options.length < 2) {
                    var id = $(this).attr('id').split('e')[1]
                    if ($(this).val() > 0) {
                        $("#animal_sound_type" + id).prepend("<option value='0'></option>")
                    }
                    var data = arr[$("#taxon_class" + id).val() + $("#taxon_order" + id).val()]
                    for (var key in data) {
                        if ($(this).val() != data[key][0]) {
                            $("#animal_sound_type" + id).append("<option value=" + data[key][0] + ">" + data[key][1] + "</option>");
                        }
                    }
                }
            });
            $('#tagsTable tbody').on('change', 'select[name=phony]', function () {
                var id = $(this).attr('id').split('_')[1]
                if ($("#phony_" + id).find("option:selected").text() == 'biophony') {
                    $(".phony_" + id).show()
                } else {
                    $(".phony_" + id).hide()
                }
                $('#sound_id' + id).empty()
                for (var key in soundTypes) {
                    if (soundTypes[key]['phony'] == $("#phony_" + id).find("option:selected").text()) {
                        $('#sound_id' + id).append("<option value='" + soundTypes[key]['sound_id'] + "'>" + soundTypes[key]['sound_type'] + "</option>");
                    }
                }
            });
            $('button[name="table-btn"][data-target="#viewing"]').click(function (e) {
                $('.js-checkbox:checked').each(function () {
                    window.open('/recording/show/' + $(this).data('recording-id') + '?t_min=' + $(this).data('tmin') + '&t_max=' + $(this).data('tmax') + '&f_min=' + $(this).data('fmin') + '&f_max=' + $(this).data('fmax'), '_blank');
                });
                e.preventDefault();
            })

            $('button[name="table-btn"][data-target="#deletion"]').click(function (e) {
                if (!confirm('Are you sure you want to delete this tags?')) {
                    return false;
                }
                let id = [];
                $('.js-checkbox:checked').each(function () {
                    id.push($(this).data('id'));
                });
                let data = {'id': id};
                postRequest('{{ baseUrl }}/api/admin/tagMgr/delete', data, false, false, function () {
                    location.reload();
                });
            })
        });
    </script>
{% endblock %}
